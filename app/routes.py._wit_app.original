#######
#Date: 2025/05/14
# Filename: routes.py
#######

# Flask and DB imports for easy template rendering & handling visitors and members. 
from flask import render_template, redirect, url_for, flash, request
from flask_login import login_user, current_user, logout_user, login_required
from app.models import db, User
from app.forms import RegistrationForm, LoginForm
from flask import current_app as app


# Defining Root Route
@app.route('/', strict_slashes=False)
def home():
    return render_template('home.html')

# Define Registration Route
@app.route('/register', methods=['GET', 'POST'])
# registration function
def register():
    # Only Allow Access to Dashboard by Authenticated Users
    if current_user.is_authenticated:
        return redirect(url_for('dashboard'))

    form = RegistrationForm()
    if form.validate_on_submit():
        user = User(username=form.username.data, email=form.email.data)
        user.set_password(form.password.data)
        db.session.add(user)
        db.session.commit()
        flash('Account created! You may now Login.', 'success')
        return redirect(url_for('login'))
    return render_template('register.html', form=form)

# Define Login  Route
@app.route('/login', methods=["GET", "POST"])
def login():
    # check if user is authenticated
    if current_user.is_authenticated:
        return redirect(url_for('dashboard'))

    # Initialize the LoginForm
    form = LoginForm()
    if form.validate_on_submit():
        user = User.query.filter_by(email=form.email.data).first()
        if user and user.check_password(form.password.data):
            login_user(user)
            flash('Logged in successfully!', 'success')
            return redirect(url_for('dashboard'))
        else:
            flash('Login Failed. Check email/password', 'danger')
        return render_template('login.html', form=form)

# Define DashBoard Route
@app.route('/dashboard')
@login_required
def dashboard():
    return render_template('dashboard.html', name=current_user.username)

# Define Logout Route
@app.route('/logout')
def logout():
    logout_user()
    return redirect(url_for('login'))
